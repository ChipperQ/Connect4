# Miguel Quime
# Connect Four

require 'gosu'

class Game
	module Pattern
		Won = 
		[[(/RRRR....................................../),:R],	[(/BBBB....................................../),:B],	[(/R......R......R......R..................../),:R],	[(/B......B......B......B..................../),:B],	[(/R.......R.......R.......R................./),:R],	[(/..B.......B.......B.......B.............../),:B],	[(/......B.....B.....B.....B................./),:B],
		[(/.RRRR...................................../), :R],	[(/.BBBB...................................../),:B],	[(/.......R......R......R......R............./),:R],	[(/.......B......B......B......B............./),:B],	[(/........R.......R.......R.......R........./),:R],	[(/..........B.......B.......B.......B......./),:B],	[(/............B.....B.....B.....B.........../),:B],
		[(/..RRRR..................................../), :R],	[(/..BBBB..................................../),:B],	[(/..............R......R......R......R....../),:R],	[(/..............B......B......B......B....../),:B],	[(/................R.......R.......R.......R./),:R],	[(/...B.......B.......B.......B............../),:B],	[(/..................B.....B.....B.....B...../),:B],
		[(/...RRRR.................................../), :R],	[(/...BBBB.................................../),:B],	[(/.R......R......R......R.................../),:R],	[(/.B......B......B......B.................../),:B],	[(/.R.......R.......R.......R................/),:R],	[(/...R.....R.....R.....R..................../),:R],	[(/.............B.....B.....B.....B........../),:B],
		[(/.......RRRR.............................../), :R],	[(/.......BBBB.............................../),:B],	[(/........R......R......R......R............/),:R],	[(/........B......B......B......B............/),:B],	[(/.........R.......R.......R.......R......../),:R],	[(/....R.....R.....R.....R.................../),:R],	[(/...................B.....B.....B.....B..../),:B],
		[(/........RRRR............................../), :R],	[(/........BBBB............................../),:B],	[(/...............R......R......R......R...../),:R],	[(/...............B......B......B......B...../),:B],	[(/.................R.......R.......R.......R/),:R],	[(/..........R.....R.....R.....R............./),:R],	[(/....................B.....B.....B.....B.../),:B],
		[(/.........RRRR............................./), :R],	[(/.........BBBB............................./),:B],	[(/..R......R......R......R................../),:R],	[(/..B......B......B......B................../),:B],	[(/..............R.......R.......R.......R.../),:R],	[(/.....R.....R.....R.....R................../),:R],
		[(/..........RRRR............................/), :R],	[(/..........BBBB............................/),:B],	[(/.........R......R......R......R.........../),:R],	[(/.........B......B......B......B.........../),:B],	[(/.......R.......R.......R.......R........../),:R],	[(/...........R.....R.....R.....R............/),:R],
		[(/..............RRRR......................../), :R],	[(/..............BBBB......................../),:B],	[(/................R......R......R......R..../),:R],	[(/................B......B......B......B..../),:B],	[(/...............R.......R.......R.......R../),:R],	[(/.................R.....R.....R.....R....../),:R],
		[(/...............RRRR......................./), :R],	[(/...............BBBB......................./),:B],	[(/...R......R......R......R................./),:R],	[(/...B......B......B......B................./),:B],	[(/..R.......R.......R.......R.............../),:R],	[(/......R.....R.....R.....R................./),:R],
		[(/................RRRR....................../), :R],	[(/................BBBB....................../),:B],	[(/..........R......R......R......R........../),:R],	[(/..........B......B......B......B........../),:B],	[(/..........R.......R.......R.......R......./),:R],	[(/............R.....R.....R.....R.........../),:R],
		[(/.................RRRR...................../), :R],	[(/.................BBBB...................../),:B],	[(/.................R......R......R......R.../),:R],	[(/.................B......B......B......B.../),:B],	[(/...R.......R.......R.......R............../),:R],	[(/..................R.....R.....R.....R...../),:R],
		[(/.....................RRRR................./), :R],	[(/.....................BBBB................./),:B],	[(/....R......R......R......R................/),:R],	[(/....B......B......B......B................/),:B],	[(/B.......B.......B.......B................./),:B],	[(/.............R.....R.....R.....R........../),:R],
		[(/......................RRRR................/), :R],	[(/......................BBBB................/),:B],	[(/...........R......R......R......R........./),:R],	[(/...........B......B......B......B........./),:B],	[(/........B.......B.......B.......B........./),:B],	[(/...................R.....R.....R.....R..../),:R],
		[(/.......................RRRR.............../), :R],	[(/.......................BBBB.............../),:B],	[(/..................R......R......R......R../),:R],	[(/..................B......B......B......B../),:B],	[(/................B.......B.......B.......B./),:B],	[(/....................R.....R.....R.....R.../),:R],
		[(/........................RRRR............../), :R],	[(/........................BBBB............../),:B],	[(/.....R......R......R......R.............../),:R],	[(/.....B......B......B......B.............../),:B],	[(/.B.......B.......B.......B................/),:B],	[(/...B.....B.....B.....B..................../),:B],
		[(/............................RRRR........../), :R],	[(/............................BBBB........../),:B],	[(/............R......R......R......R......../),:R],	[(/............B......B......B......B......../),:B],	[(/.........B.......B.......B.......B......../),:B],	[(/....B.....B.....B.....B.................../),:B],
		[(/.............................RRRR........./), :R],	[(/.............................BBBB........./),:B],	[(/...................R......R......R......R./),:R],	[(/...................B......B......B......B./),:B],	[(/.................B.......B.......B.......B/),:B],	[(/..........B.....B.....B.....B............./),:B],
		[(/..............................RRRR......../), :R],	[(/..............................BBBB......../),:B],	[(/......R......R......R......R............../),:R],	[(/......B......B......B......B............../),:B],	[(/..............B.......B.......B.......B.../),:B],	[(/.....B.....B.....B.....B................../),:B],
		[(/...............................RRRR......./), :R],	[(/...............................BBBB......./),:B],	[(/.............R......R......R......R......./),:R],	[(/.............B......B......B......B......./),:B],	[(/.......B.......B.......B.......B........../),:B],	[(/...........B.....B.....B.....B............/),:B],
		[(/...................................RRRR.../), :R],	[(/...................................BBBB.../),:B],	[(/....................R......R......R......R/),:R],	[(/....................B......B......B......B/),:B],	[(/...............B.......B.......B.......B../),:B],	[(/.................B.....B.....B.....B....../),:B],
		[(/....................................RRRR../), :R],	[(/....................................BBBB../),:B],
		[(/.....................................RRRR./), :R],	[(/.....................................BBBB./),:B],
		[(/......................................RRRR/), :R], [(/......................................BBBB/),:B],]
	end
	attr_reader :players, :board, :board_move, :current_player
	def initialize
		@players = {:player1 => 'R', :player2 => 'B'}
    @board = [].fill(0,42) {" "}
		@current_player = @players[:player1]
	end

	def make_move(pmove)
		  @move = @pmove = pmove
			last_row = 35
      stack_row = 7
			@move += last_row
			while occupied?()
				@move -= stack_row
				break if @move < 0
			end
			if is_valid_move == true
				 @board[@move] = @current_player
			else
				puts "Invalid"
        false
			end
	end
	
	def occupied?
		if @board[@move] == " "
			return false
		else
			return true
		end
	end
	
	def is_valid_move()
		if @pmove >= 0 && @pmove < 7 && occupied? == false 
			return true
		else 
			return false
		end
	end

	def switch_player()
		if @current_player == 'R' 
			@current_player = @players[:player2]
		else 
			@current_player = @players[:player1]
		end
	end

	def check_for_win()
		@winner = nil
		w = Pattern::Won.find {|p| p.first =~ @board.join}
			if w 
				@winner = (w.last === :R) ? 'R' : 'B'
				return true
			end
			false
	end
  
	def game_tie?()
		if @board.include?(" ") == false
			return true
		end
	end

	def end_game()
		if check_for_win() then
			return true
	  end
  end
  
end

class GameWindow < Gosu::Window
  	def initialize
  		super 541, 465, false
  		self.caption = "Connect 4"
  		@game = Game.new()
  		@background_image = Gosu::Image.new(self, "c4board.png", true)
      @black_piece = Gosu::Image.new(self, "b.png", true)
      @green_piece = Gosu::Image.new(self, 'g.png', true)
      @green_winning_piece = Gosu::Image.new(self, 'winner_green.png', true)
      @black_winning_piece = Gosu::Image.new(self, 'winner_black.png', true)
      @no_winner = Gosu::Image.new(self, 'no_winner.png', true)
  	end

  	def needs_cursor?
  		true
    end
        
   def index_from_mouse_location()
      left_x_for_pixel = 1
      right_x_for_pixel = 77
      row = 7
      @column_index = ((mouse_x.to_i-left_x_for_pixel)/right_x_for_pixel)
      @row_index = (row*(((mouse_y.to_i)-left_x_for_pixel)/right_x_for_pixel))
      @index = @column_index + @row_index
    end
    
    def location_from_index(index)
      @column = (index%7)
      @row = (index/7)
      return [(@column*77)+5, (@row*77)+5]
    end
     
  	def reset_if_replay()
  		@game = Game.new()
  	end     

    def button_down(id)
    	close if id == Gosu::KbEscape
      reset_if_replay() if id == Gosu::KbSpace
      if id == Gosu::MsLeft
        if @game.end_game() || @game.game_tie?()
         nil
        else
          location_from_index(index_from_mouse_location())
          if @game.make_move(@column)
            @game.end_game()
            @game.switch_player() unless @game.end_game()
          end
        end
      else
        puts "Only left clicks." unless id == Gosu::KbEscape || id == Gosu::KbSpace
      end
    end    

    def draw()
      @background_image.draw(0, 0, 0)
      for index in 0..41
        if @game.board[index] == "R"
          (x,y) = location_from_index(index)
          @green_piece.draw(x,y,0)
        elsif @game.board[index] == "B"
          (x,y) = location_from_index(index)
          @black_piece.draw(x,y,0)
        end
      end
      
      if @game.game_tie?()
        @no_winner.draw(170,45,0)
      end
      
      if @game.end_game()
        if @game.current_player == 'R'
          @green_winning_piece.draw(170,45,0)
        elsif @game.current_player == 'B'
          @black_winning_piece.draw(170,45,0)
        end 
      end
    end
    
  end
  
  window = GameWindow.new
  window.show
